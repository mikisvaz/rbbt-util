#!/usr/bin/env ruby

require 'rbbt/workflow'
require 'rbbt/workflow/util/trace'

require 'rbbt-util'
require 'fileutils'
require 'rbbt/util/simpleopt'
require 'rbbt/workflow/step'
require 'rbbt/workflow/util/provenance'
require 'rbbt/util/misc'

require 'rbbt-util'
require 'rbbt/util/simpleopt'
require 'rbbt/util/R'

$0 = "rbbt #{$previous_commands*""} #{ File.basename(__FILE__) }" if $previous_commands

options = SOPT.setup <<EOF
Examine the execution trace of a job or set of jobs

$ rbbt workflow trace <job-result>

-h--help Help
-fg--fix_gap Remove execution gaps
-rk--report_keys* Config keys and info fields to report
-p--plot* Plot file
-w--width* Image Width
-h--height* Image Height
-s--size* Image Size (Height and Width)
-pd--plot_data Print plot data
EOF

SOPT.usage if options[:help]


files = ARGV
plot = options[:plot]

def get_step(file)
  file = File.expand_path(file)
  file = file.sub(/\.(info|files)/,'')
  Workflow.load_step file
end

jobs = []
jobs = files.collect do |file|
  get_step file
end

puts Workflow.trace(jobs, options)
