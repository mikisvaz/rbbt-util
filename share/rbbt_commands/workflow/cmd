#!/usr/bin/env ruby

require 'rbbt'
require 'rbbt/util/simpleopt'
require 'rbbt/workflow'

workflow = ARGV.shift

wf = Workflow.require_workflow workflow
dir = $command_dir = wf.libdir.share.rbbt_commands

def commands(prev)
    rbbt_command_dir = $command_dir

    command_file_dirs = rbbt_command_dir.find_all
    command_files = command_file_dirs.collect{|d| d.glob('*') }.flatten
    command_files.collect{|p| File.basename(p) }.uniq.reject{|p| p =~ /\.desc$/}.sort
end


prev = []

begin
  while ARGV.any?
    command = ARGV.shift
    case
    when File.directory?(dir[command].find)
      prev << command
      dir = dir[command]
    when dir[command].exists?
      load dir[command].find
      exit 0
    else
      puts "Error: Command not understood"
      puts
      break
    end
  end
end

puts SOPT.doc
puts
puts Log.color :magenta, "## COMMANDS"
puts
puts Log.color :magenta, "Command:"
puts 
puts "  #{File.basename($0)} #{$previous_commands * " "} cmd"
puts 
puts Log.color :magenta, "Subcommands:"
puts 
commands(prev).each do |command|
    puts "  " << command
end
    
